import React from 'react';
import { BannerData } from '../PromoBanner';
import './AdsManagement.css';

interface AdsManagementProps {
    allAds: BannerData[];
    filteredAds: BannerData[];
    adsFilter: 'all' | 'active' | 'inactive';
    adsSort: 'priority' | 'title' | 'date';
    adsLoading: boolean;
    onAddAd: () => void;
    onEditAd: (banner: BannerData) => void;
    onDeleteAd: (id: string) => void;
    onToggleAd: (banner: BannerData) => void;
    onFilterChange: (filter: 'all' | 'active' | 'inactive') => void;
    onSortChange: (sort: 'priority' | 'title' | 'date') => void;
}

const AdsManagement: React.FC<AdsManagementProps> = ({
    allAds,
    filteredAds,
    adsFilter,
    adsSort,
    adsLoading,
    onAddAd,
    onEditAd,
    onDeleteAd,
    onToggleAd,
    onFilterChange,
    onSortChange
}) => {
    return (
        <div className="tab-content">
            <div className="banners-management">
                <div className="section-header">
                    <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∫–ª–∞–º–æ–π</h2>
                    <button
                        className="btn btn-primary add-btn"
                        onClick={onAddAd}
                    >
                        –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∫–ª–∞–º—É
                    </button>
                </div>

                {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è - —É–±–∏—Ä–∞–µ–º –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ */}
                {process.env.NODE_ENV === 'development' && (
                    <div className="debug-info" style={{
                        padding: '10px',
                        background: '#f0f0f0',
                        borderRadius: '4px',
                        marginBottom: '20px',
                        fontSize: '12px'
                    }}>
                        <strong>–û—Ç–ª–∞–¥–∫–∞:</strong><br />
                        –í—Å–µ–≥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏–π: {allAds.length}<br />
                        –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: {filteredAds.length}<br />
                        –¢–µ–∫—É—â–∏–π —Ñ–∏–ª—å—Ç—Ä: {adsFilter}<br />
                        –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞: {adsSort}<br />
                        –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏: {adsLoading ? '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...' : '–ì–æ—Ç–æ–≤–æ'}
                    </div>
                )}

                {/* –§–∏–ª—å—Ç—Ä—ã –∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ */}
                <div className="filters-section">
                    <div className="filter-group">
                        <label htmlFor="adsFilter">–ü–æ–∫–∞–∑–∞—Ç—å:</label>
                        <select
                            id="adsFilter"
                            value={adsFilter}
                            onChange={(e) => onFilterChange(e.target.value as any)}
                            className="filter-select"
                        >
                            <option value="all">–í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è</option>
                            <option value="active">–ê–∫—Ç–∏–≤–Ω—ã–µ</option>
                            <option value="inactive">–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ</option>
                        </select>
                    </div>

                    <div className="filter-group">
                        <label htmlFor="adsSort">–°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞:</label>
                        <select
                            id="adsSort"
                            value={adsSort}
                            onChange={(e) => onSortChange(e.target.value as any)}
                            className="filter-select"
                        >
                            <option value="priority">–ü–æ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç—É</option>
                            <option value="title">–ü–æ –Ω–∞–∑–≤–∞–Ω–∏—é</option>
                            <option value="date">–ü–æ –¥–∞—Ç–µ</option>
                        </select>
                    </div>
                </div>

                {/* –°–ø–∏—Å–æ–∫ —Ä–µ–∫–ª–∞–º—ã */}
                <div className="banners-container">
                    {adsLoading ? (
                        <div className="loading-state">
                            <div className="loading-spinner"></div>
                            <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∫–ª–∞–º–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π...</p>
                        </div>
                    ) : filteredAds.length === 0 ? (
                        <div className="empty-state">
                            <div className="empty-icon">üì¢</div>
                            <h3>–†–µ–∫–ª–∞–º–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
                            <p>
                                {adsFilter === 'active' ? '–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π' :
                                    adsFilter === 'inactive' ? '–ù–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π' :
                                        '–°–æ–∑–¥–∞–π—Ç–µ –ø–µ—Ä–≤–æ–µ —Ä–µ–∫–ª–∞–º–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã'}
                            </p>
                            <button
                                className="btn btn-primary"
                                onClick={onAddAd}
                            >
                                –°–æ–∑–¥–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ
                            </button>
                        </div>
                    ) : (
                        <>
                            {/* Desktop table view */}
                            <div className="banners-table-container desktop-only">
                                <table className="banners-table">
                                    <thead>
                                        <tr>
                                            <th>–ü—Ä–µ–≤—å—é</th>
                                            <th>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                                            <th>–¢–∏–ø</th>
                                            <th>–°—Ç–∞—Ç—É—Å</th>
                                            <th>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç</th>
                                            <th>–î–µ–π—Å—Ç–≤–∏—è</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        {filteredAds.map((ad: BannerData) => (
                                            <tr key={ad.id} className="banner-row">
                                                <td className="preview-cell">
                                                    <div className="banner-preview">
                                                        {(ad.imageUrl || ad.gifUrl) ? (
                                                            <img
                                                                src={ad.gifUrl || ad.imageUrl}
                                                                alt={ad.title}
                                                                className="preview-image"
                                                            />
                                                        ) : (
                                                            <div className="preview-placeholder">
                                                                <span>–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</span>
                                                            </div>
                                                        )}
                                                    </div>
                                                </td>
                                                <td className="title-cell">
                                                    <div className="banner-title">{ad.title}</div>
                                                    {ad.clickUrl && (
                                                        <div className="banner-url" title={ad.clickUrl}>
                                                            {ad.clickUrl.length > 50 ?
                                                                `${ad.clickUrl.substring(0, 50)}...` :
                                                                ad.clickUrl
                                                            }
                                                        </div>
                                                    )}
                                                </td>
                                                <td className="type-cell">
                                                    <span className={`type-badge ${ad.type}`}>
                                                        {ad.type === 'vertical' ? '–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π' :
                                                            ad.type === 'square' ? '–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π' :
                                                                ad.type === 'horizontal' ? '–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π' : ad.type}
                                                    </span>
                                                </td>
                                                <td className="status-cell">
                                                    <span className={`status-badge ${ad.isActive ? 'active' : 'inactive'}`}>
                                                        {ad.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                                                    </span>
                                                </td>
                                                <td className="priority-cell">
                                                    <span className="priority-value">{ad.priority || 1}</span>
                                                </td>
                                                <td className="actions-cell">
                                                    <div className="actions-group">
                                                        <button
                                                            className="btn btn-outline btn-sm"
                                                            onClick={() => onEditAd(ad)}
                                                            disabled={adsLoading}
                                                            title="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"
                                                        >
                                                            –ò–∑–º–µ–Ω–∏—Ç—å
                                                        </button>
                                                        <button
                                                            className={`btn btn-sm ${ad.isActive ? 'btn-warning' : 'btn-success'}`}
                                                            onClick={() => onToggleAd(ad)}
                                                            disabled={adsLoading}
                                                            title={ad.isActive ? '–î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å' : '–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
                                                        >
                                                            {ad.isActive ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}
                                                        </button>
                                                        <button
                                                            className="btn btn-danger btn-sm"
                                                            onClick={() => onDeleteAd(ad.id)}
                                                            disabled={adsLoading}
                                                            title="–£–¥–∞–ª–∏—Ç—å –æ–±—ä—è–≤–ª–µ–Ω–∏–µ"
                                                        >
                                                            –£–¥–∞–ª–∏—Ç—å
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        ))}
                                    </tbody>
                                </table>
                            </div>

                            {/* Mobile card view */}
                            <div className="banners-cards-container mobile-only">
                                {filteredAds.map((ad: BannerData) => (
                                    <div key={ad.id} className="banner-card">
                                        <div className="banner-card-header">
                                            <div className="banner-card-title">{ad.title}</div>
                                            <span className={`status-badge ${ad.isActive ? 'active' : 'inactive'}`}>
                                                {ad.isActive ? '–ê–∫—Ç–∏–≤–Ω–∞' : '–ù–µ–∞–∫—Ç–∏–≤–Ω–∞'}
                                            </span>
                                        </div>

                                        <div className="banner-card-content">
                                            <div className="banner-card-preview">
                                                {(ad.imageUrl || ad.gifUrl) ? (
                                                    <img
                                                        src={ad.gifUrl || ad.imageUrl}
                                                        alt={ad.title}
                                                        className="preview-image"
                                                    />
                                                ) : (
                                                    <div className="preview-placeholder">
                                                        <span>–ù–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è</span>
                                                    </div>
                                                )}
                                            </div>

                                            <div className="banner-card-info">
                                                <div className="info-row">
                                                    <span className="info-label">–¢–∏–ø:</span>
                                                    <span className={`type-badge ${ad.type}`}>
                                                        {ad.type === 'vertical' ? '–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π' :
                                                            ad.type === 'square' ? '–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π' :
                                                                ad.type === 'horizontal' ? '–ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π' : ad.type}
                                                    </span>
                                                </div>
                                                <div className="info-row">
                                                    <span className="info-label">–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:</span>
                                                    <span className="priority-value">{ad.priority || 1}</span>
                                                </div>
                                                {ad.clickUrl && (
                                                    <div className="info-row">
                                                        <span className="info-label">–°—Å—ã–ª–∫–∞:</span>
                                                        <span className="banner-url">{ad.clickUrl}</span>
                                                    </div>
                                                )}
                                            </div>
                                        </div>

                                        <div className="banner-card-actions">
                                            <button
                                                className="btn btn-outline btn-sm"
                                                onClick={() => onEditAd(ad)}
                                                disabled={adsLoading}
                                            >
                                                –ò–∑–º–µ–Ω–∏—Ç—å
                                            </button>
                                            <button
                                                className={`btn btn-sm ${ad.isActive ? 'btn-warning' : 'btn-success'}`}
                                                onClick={() => onToggleAd(ad)}
                                                disabled={adsLoading}
                                            >
                                                {ad.isActive ? '–û—Ç–∫–ª—é—á–∏—Ç—å' : '–í–∫–ª—é—á–∏—Ç—å'}
                                            </button>
                                            <button
                                                className="btn btn-danger btn-sm"
                                                onClick={() => onDeleteAd(ad.id)}
                                                disabled={adsLoading}
                                            >
                                                –£–¥–∞–ª–∏—Ç—å
                                            </button>
                                        </div>
                                    </div>
                                ))}
                            </div>
                        </>
                    )}
                </div>
            </div>
        </div>
    );
};

export default AdsManagement;
